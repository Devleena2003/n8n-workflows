{
  "name": "My workflow 4",
  "nodes": [
    {
      "parameters": {
        "formTitle": "Social media automation",
        "formDescription": "Give your product image and ref image ai will do the rest",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Product Image",
              "fieldType": "file",
              "multipleFiles": false,
              "requiredField": true
            },
            {
              "fieldLabel": "Ref Image",
              "fieldType": "file",
              "multipleFiles": false,
              "requiredField": true
            },
            {
              "fieldLabel": "Product Description",
              "fieldType": "textarea",
              "requiredField": true
            }
          ]
        },
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.3,
      "position": [
        0,
        0
      ],
      "id": "715ce9f3-e330-4074-a406-c62aa8522be0",
      "name": "On form submission",
      "webhookId": "a770cbbc-1b53-490c-bcfd-332283a780c3"
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "binaryPropertyName": "Product_Image",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        208,
        0
      ],
      "id": "39673c1e-aaea-4ca8-90bb-d1f23c3da69e",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "binaryPropertyName": "Ref_Image",
        "destinationKey": "ref_data",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        416,
        0
      ],
      "id": "8f8b18a9-489d-4c16-9983-66d99566fcfa",
      "name": "Extract from File1"
    },
    {
      "parameters": {
        "jsCode": "const imageStyleData = $(\"Extract from File1\").all().map((item) => item.json)[0][\n  \"ref_data\"\n];\nconst productImageData = $(\"Extract from File\")\n  .all()\n  .map((item) => item.json)[0][\"data\"];\n\nconst imageStyleURL = `data:image/png;base64,${imageStyleData}`;\nconst productImageURL = `data:image/png;base64,${productImageData}`;\n\nreturn { imageStyleURL, productImageURL };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        624,
        0
      ],
      "id": "440d986d-535d-4d54-bd33-66787a226e32",
      "name": "Code"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://openrouter.ai/api/v1/chat/completions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openRouterApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"model\": \"google/gemini-2.5-flash-image-preview\",\n\"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": \"IMAGE 1 is a reference advertisement. IMAGE 2 is a product. Analyze the style, composition, mood, and setting of IMAGE 1. Then, generate a new, high-quality photorealistic image featuring the product from IMAGE 2 presented in the exact same style as IMAGE 1.\\n\\nPay extremely close attention to:\\n1. **Lighting:** The direction, warmth, and softness/harshness of the light.\\n2. **Composition:** The angle of the shot (e.g., overhead, eye-level), framing, and how the subject is positioned.\\n3. **Background & Setting:** The environment, colors, and textures.\\n4. **Mood & Atmosphere:** The overall feeling (e.g., happy, serene, luxurious, energetic).\\n5. **Product Presentation:** How the product is held, used, or displayed within the scene.\\n\\nThe final image should look like a professional advertisement for the product, created by the same photographer or marketing team as the reference image (IMAGE 1).\"\n        },\n        {\n          \"type\": \"image_url\",\n          \"image_url\": {\n            \"url\": \"{{ $json.imageStyleURL }}\"\n          }\n        },\n        {\n          \"type\": \"image_url\",\n          \"image_url\": {\n            \"url\": \"{{ $json.productImageURL }}\"\n          }\n        }\n      ]\n    }\n  ]\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        832,
        0
      ],
      "id": "9a48d195-a10d-4f4a-9017-20a824cf1880",
      "name": "HTTP Request",
      "credentials": {
        "googlePalmApi": {
          "id": "bUiU9RqqQpwmg4fA",
          "name": "Google Gemini(PaLM) Api account"
        },
        "openRouterApi": {
          "id": "45ZX8ZQCzZrhEcGM",
          "name": "OpenRouter account 3"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1040,
        0
      ],
      "id": "88251ed6-21c2-47c6-8529-5c482b1fa7a9",
      "name": "Wait",
      "webhookId": "e6946275-d0b4-457d-9993-ad15ded9938e"
    },
    {
      "parameters": {
        "text": "=About Product: {{ $('On form submission').item.json['Product Description'] }}\n\nBased on this [About Product] Generate Perfect And Social Media Platform Based Captions. Don't use (*) this star symbol in the output.",
        "attributes": {
          "attributes": [
            {
              "name": "Facebook caption",
              "description": "Caption for Facebook Post with proper Hashtags",
              "required": true
            },
            {
              "name": "Instagram Caption",
              "description": "Caption for Instagram post with proper Hashtags",
              "required": true
            },
            {
              "name": "Linkedin Caption",
              "description": "Caption for Linkedin Post with proper Hashtags",
              "required": true
            },
            {
              "name": "Twitter Caption",
              "description": "perfect Tweet in less than 280 Characters",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.2,
      "position": [
        0,
        224
      ],
      "id": "61b2e123-be8c-4bf9-b44d-3737549915a2",
      "name": "Information Extractor"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -32,
        448
      ],
      "id": "d308d2b7-4305-4653-ae40-c0a775550b97",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "bUiU9RqqQpwmg4fA",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ed08330a-1990-4db5-a334-be9f6208b73c",
              "leftValue": "={{ $('HTTP Request').item.json.choices[0].message.images[0].image_url.url }}",
              "rightValue": "exists",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "9376452a-3f7e-498d-8e50-a6bc7b39347d",
              "leftValue": "={{ $('HTTP Request').item.json.choices[0].message.images[0].image_url.url }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        352,
        224
      ],
      "id": "0bcb93a2-430c-4786-8b57-a580a852b587",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "sendTo": "dmou96593@gmail.com",
        "subject": "Approval for Your Product Post",
        "message": "=<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Social Media Captions</title>\n  <style>\n    /* Google Fonts */\n    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap');\n\n    body {\n      font-family: 'Inter', sans-serif;\n      background: linear-gradient(135deg, #e0f7fa, #e3f2fd);\n      margin: 0;\n      padding: 20px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      min-height: 100vh;\n    }\n\n    .container {\n      background: #fff;\n     \n      border-radius: 20px;\n      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\n      max-width: 850px;\n      width: 100%;\n      animation: fadeIn 0.8s ease-in-out;\n    }\n\n    h1 {\n      color: #0d47a1;\n      text-align: center;\n      margin-bottom: 35px;\n      font-size: 2.2rem;\n      font-weight: 700;\n      position: relative;\n    }\n\n    h1::after {\n      content: \"\";\n      width: 80px;\n      height: 4px;\n      background: #0d47a1;\n      display: block;\n      margin: 10px auto 0;\n      border-radius: 2px;\n    }\n\n    .section {\n      margin-bottom: 25px;\n      background: #f5f9ff;\n      border-left: 6px solid #0d47a1;\n      padding: 18px 20px;\n      border-radius: 12px;\n      transition: transform 0.2s ease, box-shadow 0.2s ease;\n    }\n\n    .section:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 15px rgba(0, 0, 0, 0.08);\n    }\n\n    .section-title {\n      font-weight: 600;\n      font-size: 1.05rem;\n      color: #0d47a1;\n      margin-bottom: 8px;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n    }\n\n    .section-title::before {\n      content: \"💡\";\n      font-size: 1.2rem;\n    }\n\n    p {\n      margin: 0;\n      line-height: 1.6;\n      color: #444;\n      font-size: 0.95rem;\n    }\n\n    .image-container {\n      text-align: center;\n      margin-top: 40px;\n      border-top: 2px dashed #bbb;\n      padding-top: 25px;\n    }\n\n    .image-container .section-title {\n      justify-content: center;\n      margin-bottom: 15px;\n    }\n\n    .image-container img {\n      max-width: 100%;\n      border-radius: 15px;\n      box-shadow: 0 6px 20px rgba(0, 0, 0, 0.12);\n      transition: transform 0.3s ease;\n    }\n\n    .image-container img:hover {\n      transform: scale(1.03);\n    }\n\n    /* Animation */\n    @keyframes fadeIn {\n      from {\n        opacity: 0;\n        transform: translateY(15px);\n      }\n      to {\n        opacity: 1;\n        transform: translateY(0);\n      }\n    }\n  </style>\n</head>\n<body>\n\n<div class=\"container\">\n  <h1>✨ Social Media Content ✨</h1>\n\n  <div class=\"section\">\n    <div class=\"section-title\">Facebook Caption</div>\n    <p>{{ $('Information Extractor').item.json.output['Facebook caption'] }}</p>\n  </div>\n\n  <div class=\"section\">\n    <div class=\"section-title\">Instagram Caption</div>\n    <p>{{ $('Information Extractor').item.json.output['Instagram Caption'] }}</p>\n  </div>\n\n  <div class=\"section\">\n    <div class=\"section-title\">LinkedIn Caption</div>\n    <p>{{ $('Information Extractor').item.json.output['Linkedin Caption'] }}</p>\n  </div>\n\n  <div class=\"section\">\n    <div class=\"section-title\">Twitter Caption</div>\n    <p>{{ $('Information Extractor').item.json.output['Twitter Caption'] }}</p>\n  </div>\n\n \n  <div class=\"image-container\">\n    <div class=\"section-title\">Generated Image</div>\n    <img src=\"{{ $('HTTP Request').item.json.choices[0].message.images[0].image_url.url }}\" alt=\"Generated Image\">\n  </div>\n</div>\n</body>\n</html>",
        "approvalOptions": {
          "values": {
            "approvalType": "double",
            "disapproveLabel": "Regenerate",
            "buttonDisapprovalStyle": "primary"
          }
        },
        "options": {
          "limitWaitTime": {
            "values": {
              "resumeAmount": 5,
              "resumeUnit": "minutes"
            }
          },
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        624,
        224
      ],
      "id": "f9128521-5437-4bc4-9943-a9bb176195d4",
      "name": "Send message and wait for response",
      "webhookId": "85737281-61a5-4b96-87ed-6a6b1623105b",
      "credentials": {
        "gmailOAuth2": {
          "id": "TeFPotXQPoyEBblo",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.data.approved }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    },
                    "id": "f90ef337-a484-432d-b499-669ebd8bc02c"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Approved"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4ff088d3-ecad-4537-8031-06a606ba38a1",
                    "leftValue": "={{ $json.data.approved }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "false",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Regenerate"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        832,
        224
      ],
      "id": "43a81adc-d27e-4e20-b55c-d1b9a430acff",
      "name": "Switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9b3f5808-25f9-4146-94fa-0982c7575166",
              "name": "data",
              "value": "={{ $('HTTP Request').item.json.choices[0].message.images[0].image_url.url }}",
              "type": "string"
            },
            {
              "id": "1fb924ca-8e36-4e19-990f-406349fd7d92",
              "name": "base",
              "value": "={{ $('HTTP Request').item.json.choices[0].message.images[0].image_url.url.split(',')[1] }}",
              "type": "string"
            },
            {
              "id": "c3f90cbc-c032-442c-89aa-1154f849284b",
              "name": "mime",
              "value": "={{ $('HTTP Request').item.json.choices[0].message.images[0].image_url.url.split(';')[0].split(':')[1] }}",
              "type": "string"
            },
            {
              "id": "1d6acab9-15a4-40c6-94b8-8a7ce5776ac8",
              "name": "fileName",
              "value": ".png",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        224,
        672
      ],
      "id": "3411e397-84d6-49cb-b4b2-9c963b91d2fe",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        432,
        672
      ],
      "id": "af3e0e38-30b7-44c0-ae5e-9afa4dc069ea",
      "name": "Convert to File"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-upload-post.uploadPost",
      "typeVersion": 1,
      "position": [
        640,
        672
      ],
      "id": "914e6a00-56eb-405f-8e10-322ce439ccfd",
      "name": "Upload Post",
      "credentials": {
        "uploadPostApi": {
          "id": "YnaXRVqqen2qqr8R",
          "name": "Upload Post account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "On form submission": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Send message and wait for response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send message and wait for response": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Upload Post",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "27aa0d6a-d258-4060-94ef-971e25f550a8",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d6554b8a92ad02dda2b35b9c8280415a345df2927d8239f4d2105812b89d6074"
  },
  "id": "AqlQ2WwUvh33Cw1Z",
  "tags": []
}